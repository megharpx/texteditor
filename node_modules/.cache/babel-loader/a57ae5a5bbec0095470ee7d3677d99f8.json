{"ast":null,"code":"import _regeneratorRuntime from\"/Users/meghanharper/texteditor/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/meghanharper/texteditor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{openDB}from'idb';var initdb=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",openDB('jate',1,{upgrade:function upgrade(db){if(db.objectStoreNames.contains('jate')){console.log('jate database already exists');return;}db.createObjectStore('jate',{keyPath:'id',autoIncrement:true});console.log('jate database created');}}));case 1:case\"end\":return _context.stop();}}},_callee);}));return function initdb(){return _ref.apply(this,arguments);};}();// GET function\nexport var getDb=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(value){var jateDb,tx,objStore,req,res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('Getting data from the jateDB');// connect to DB and version we want to use\n_context2.next=3;return openDB('jate',1);case 3:jateDb=_context2.sent;// transactionto specify the DB we are posting to and the data privileges. \ntx=jateDb.transaction('jate','readwrite');// open the object store\nobjStore=tx.objectStore('jate');// use the .getAll() method to grab all the content in the DB\nreq=objStore.getAll();// confirm the data was fetched\n_context2.next=9;return req;case 9:res=_context2.sent;console.log('data saved to the jateDB',res);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function getDb(_x){return _ref2.apply(this,arguments);};}();// PUT function\nexport var putDb=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id,value){var jateDb,tx,objStore,req,res;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log('PUT request to update the jateDB');// connect to DB and version we want to use\n_context3.next=3;return openDB('jate',1);case 3:jateDb=_context3.sent;// mnew trans to specify the DB we are posting to and the data privileges. \ntx=jateDb.transaction('jate','readwrite');// open the object store\nobjStore=tx.objectStore('jate');// use the .add() method to pass in content\nreq=objStore.put({id:id,value:value});// confirm the data was added\n_context3.next=9;return req;case 9:res=_context3.sent;console.log('data saved to the jateDB',res);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function putDb(_x2,_x3){return _ref3.apply(this,arguments);};}();initdb();","map":{"version":3,"names":["openDB","initdb","upgrade","db","objectStoreNames","contains","console","log","createObjectStore","keyPath","autoIncrement","getDb","value","jateDb","tx","transaction","objStore","objectStore","req","getAll","res","putDb","id","put"],"sources":["/Users/meghanharper/texteditor/src/js/database.js"],"sourcesContent":["import { openDB } from 'idb';\n\nconst initdb = async () =>\n  openDB('jate', 1, {\n    upgrade(db) {\n      if (db.objectStoreNames.contains('jate')) {\n        console.log('jate database already exists');\n        return;\n      }\n      db.createObjectStore('jate', { keyPath: 'id', autoIncrement: true });\n      console.log('jate database created');\n    },\n  });\n\n// GET function\nexport const getDb = async (value) => {\n  console.log('Getting data from the jateDB');\n  // connect to DB and version we want to use\n  const jateDb = await openDB('jate', 1);\n  // transactionto specify the DB we are posting to and the data privileges. \n  const tx = jateDb.transaction('jate', 'readwrite');\n  // open the object store\n  const objStore = tx.objectStore('jate');\n  // use the .getAll() method to grab all the content in the DB\n  const req = objStore.getAll()\n  // confirm the data was fetched\n  const res = await req;\n  console.log('data saved to the jateDB', res);\n};\n\n// PUT function\nexport const putDb = async (id, value) => {\n  console.log('PUT request to update the jateDB');\n  // connect to DB and version we want to use\n  const jateDb = await openDB('jate', 1);\n  // mnew trans to specify the DB we are posting to and the data privileges. \n  const tx = jateDb.transaction('jate', 'readwrite');\n  // open the object store\n  const objStore = tx.objectStore('jate');\n  // use the .add() method to pass in content\n  const req = objStore.put({ id: id, value: value })\n  // confirm the data was added\n  const res = await req;\n  console.log('data saved to the jateDB', res);\n};\n\ninitdb();\n"],"mappings":"wPAAA,OAASA,MAAM,KAAQ,KAAK,CAE5B,GAAMC,OAAM,4FAAG,qKACbD,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAChBE,OAAO,kBAACC,EAAE,CAAE,CACV,GAAIA,EAAE,CAACC,gBAAgB,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAE,CACxCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3C,OACF,CACAJ,EAAE,CAACK,iBAAiB,CAAC,MAAM,CAAE,CAAEC,OAAO,CAAE,IAAI,CAAEC,aAAa,CAAE,IAAK,CAAC,CAAC,CACpEJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACtC,CACF,CAAC,CAAC,0EAVEN,OAAM,0CAUR,CAEJ;AACA,MAAO,IAAMU,MAAK,6FAAG,kBAAOC,KAAK,uJAC/BN,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3C;AAAA,uBACqBP,OAAM,CAAC,MAAM,CAAE,CAAC,CAAC,QAAhCa,MAAM,gBACZ;AACMC,EAAE,CAAGD,MAAM,CAACE,WAAW,CAAC,MAAM,CAAE,WAAW,CAAC,CAClD;AACMC,QAAQ,CAAGF,EAAE,CAACG,WAAW,CAAC,MAAM,CAAC,CACvC;AACMC,GAAG,CAAGF,QAAQ,CAACG,MAAM,EAAE,CAC7B;AAAA,uBACkBD,IAAG,QAAfE,GAAG,gBACTd,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEa,GAAG,CAAC,CAAC,yDAC9C,kBAbYT,MAAK,6CAajB,CAED;AACA,MAAO,IAAMU,MAAK,6FAAG,kBAAOC,EAAE,CAAEV,KAAK,uJACnCN,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C;AAAA,uBACqBP,OAAM,CAAC,MAAM,CAAE,CAAC,CAAC,QAAhCa,MAAM,gBACZ;AACMC,EAAE,CAAGD,MAAM,CAACE,WAAW,CAAC,MAAM,CAAE,WAAW,CAAC,CAClD;AACMC,QAAQ,CAAGF,EAAE,CAACG,WAAW,CAAC,MAAM,CAAC,CACvC;AACMC,GAAG,CAAGF,QAAQ,CAACO,GAAG,CAAC,CAAED,EAAE,CAAEA,EAAE,CAAEV,KAAK,CAAEA,KAAM,CAAC,CAAC,CAClD;AAAA,uBACkBM,IAAG,QAAfE,GAAG,gBACTd,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEa,GAAG,CAAC,CAAC,yDAC9C,kBAbYC,MAAK,kDAajB,CAEDpB,MAAM,EAAE"},"metadata":{},"sourceType":"module"}